{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Metadata": {

    },
    "Parameters" : {
        "DynamoDBTableName": {
            "Description": "Name of the dynamoDB table you will use",
            "Type": "String",
            "ConstraintDescription": "must be a valid dynamoDB name."
        }
    },
    "Resources": {
        "LambdaRole" : {
          "Type" : "AWS::IAM::Role",
          "Properties" : {
            "AssumeRolePolicyDocument": {
              "Version" : "2012-10-17",
              "Statement" : [
                {
                  "Effect" : "Allow",
                  "Principal" : {
                    "Service" : ["lambda.amazonaws.com"]
                  },
                  "Action" : [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Path" : "/",
            "ManagedPolicyArns":["arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole","arn:aws:iam::aws:policy/AWSLambdaInvocation-DynamoDB"],
            "Policies": [{
					         "PolicyName": "policyname",
					         "PolicyDocument": {
						               "Version": "2012-10-17",
						               "Statement": [{
                                    "Effect": "Allow",
  							                    "Resource": "*",
							                      "Action": [
								                              "dynamodb:UpdateItem", "dynamodb:Scan"
							                      ]
						              }]
					         }
				    }]
          }
       },
        "UpdateEachRowLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "index.lambda_handler",
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaRole",
                        "Arn"
                    ]
                },
                "Code": {
                    "ZipFile": {
                        "Fn::Join": [
                            "\n",
                            [
                                "import json",
                                "import boto3",
                                "import os",
                                "import codecs",
                                "import sys",
                                "",
                                "dynamodb = boto3.resource('dynamodb')",
                                "tableName = os.environ['table']",
                                "",
                                "def lambda_handler(event, context):",
                                "",
                                "",
                                "   try:",
                                "       table = dynamodb.Table(tableName)",
                                "   except:",
                                "       print(\"Error loading DynamoDB table. Check if table was created correctly and environment variable.\")",
                                "",
                                "",
                                "   response = table.scan()",
                                "   data = response['Items']",
                                "   while 'LastEvaluatedKey' in response:",
                                "      response= table.scan(ExclusiveStartKey=response['LastEvaluatedKey'])",
                                "      data.extend(response['Items'])",
                                "",
                                "   for i in data:",
                                "      table.update_item(",
                                "         Key={'employeeId': i['employeeId']},",
                                "         UpdateExpression='set #c = :v',",
                                "         ExpressionAttributeNames={'#c': 'participantsLimit'},",
                                "         ExpressionAttributeValues={':v':5}",
                                "      )",
                                "",
                                "   return {",
                                "      'statusCode': 200,",
                                "      'body': json.dumps('All items were updated')",
                                "   }"
                            ]
                        ]
                    }
                },
                "Runtime": "python3.7",
                "Timeout": 900,
                "MemorySize": 3008,
                "Environment" : {
                    "Variables" : {"table" : { "Ref" : "DynamoDBTableName" }}
                }
            }
        }
    },
    "Outputs" : {

    }
}
